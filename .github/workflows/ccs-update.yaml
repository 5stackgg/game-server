name: Check CounterStrikeSharp Release

on:
  workflow_dispatch:
    description: 'Manually trigger CounterStrikeSharp update check'

jobs:
  check-url:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract current URL from Dockerfile
        run: |
          CURRENT_URL=$(grep 'ENV COUNTER_STRIKE_SHARP_URL' Dockerfile | cut -d'=' -f2)
          echo "CURRENT_URL=$CURRENT_URL" >> $GITHUB_ENV

      - name: Check latest release URL
        run: |
          LATEST_URL=$(curl -s https://api.github.com/repos/roflmuffin/CounterStrikeSharp/releases/latest | jq -r '.assets[] | select(.name | contains("linux") and contains("runtime")) | .browser_download_url')
          echo "LATEST_URL=$LATEST_URL" >> $GITHUB_ENV

      - name: Compare URLs
        if: env.CURRENT_URL != env.LATEST_URL
        run: |
          echo "URL has changed!"
          echo "Current URL: ${{ env.CURRENT_URL }}"
          echo "Latest URL: ${{ env.LATEST_URL }}"

      - name: Update Dockerfile
        if: env.CURRENT_URL != env.LATEST_URL
        run: |
          sed -i 's|ENV COUNTER_STRIKE_SHARP_URL=.*|ENV COUNTER_STRIKE_SHARP_URL=${{ env.LATEST_URL }}|' Dockerfile
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add Dockerfile
          git commit -m "Update CounterStrikeSharp URL to latest version"
          git push

      - name: Update csproj
        if: env.CURRENT_URL != env.LATEST_URL
        run: |
          VERSION_NUMBER=$(echo ${{ env.LATEST_URL }} | grep -oP 'v\K\d+')
          sed -i "s|<PackageReference Include=\"CounterStrikeSharp.API\" Version=\".*\"|<PackageReference Include=\"CounterStrikeSharp.API\" Version=\"1.0.${VERSION_NUMBER}\"|" src/FiveStack.csproj
          git add src/FiveStack.csproj
          git commit -m "chore: update counter-strike sharp version to 1.0.${VERSION_NUMBER}"
          git push
